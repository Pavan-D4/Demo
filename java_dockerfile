pipeline {
    agent any
    environment {
        GIT_REPO_URL = 'https://github.com/Pavan-D4/spring-app.git'
        DOCKER_IMAGE = 'pavand4/welcome-home-app'
        DOCKER_TAG = "${BUILD_NUMBER}"
        DOCKER_CREDENTIALS = 'docker-cred'
        GIT_CREDENTIALS = 'git-cred'
    }

    stages {
        stage('Checkout Source Code') {
            steps {
                git branch: 'main',
                    url: "${GIT_REPO_URL}",
                    credentialsId: "${GIT_CREDENTIALS}"
            }
        }

        stage('Build Application') {
            steps {
                sh 'mvn clean package'
            }
        }

        stage('Push Artifacts to Git') {
            steps {
                script {
                    sh '''
                        git add .
                        git diff-index --quiet HEAD || git commit -m "Pushed build artifacts from Jenkins"
                        git push origin main || true
                    '''
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} .'
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', "${DOCKER_CREDENTIALS}") {
                        sh 'docker push ${DOCKER_IMAGE}:${DOCKER_TAG}'
                    }
                }
            }
        }

        stage('Deploy Application') {
            steps {
                sshagent(['ssh-server-credentials']) {
                    sh '''
                        ssh user@remote-server "docker pull ${DOCKER_IMAGE}:${DOCKER_TAG}"
                        ssh user@remote-server "docker stop welcome-home-container || true && docker rm welcome-home-container || true"
                        ssh user@remote-server "docker run -d -p 8080:8080 --name welcome-home-container ${DOCKER_IMAGE}:${DOCKER_TAG}"
                    '''
                }
            }
        }
    }

    post {
        success {
            echo 'Deployment successful!'
        }
        failure {
            echo 'Deployment failed!'
        }
    }
}
